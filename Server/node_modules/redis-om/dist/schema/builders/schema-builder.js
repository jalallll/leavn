"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class SchemaBuilder {
    schema;
    constructor(schema) {
        this.schema = schema;
    }
    get redisSchema() {
        const redisSchema = [];
        Object.keys(this.schema.definition).forEach(field => {
            redisSchema.push(...this.buildEntry(field));
        });
        return redisSchema;
    }
    buildSortableNumeric(fieldDef) {
        return this.buildSortableField('NUMERIC', fieldDef.sortable);
    }
    buildTag() {
        return this.buildField('TAG');
    }
    buildSeparableTag(fieldDef) {
        return this.buildSeparableField('TAG', fieldDef.separator);
    }
    buildSortableTag(fieldDef) {
        return this.buildSortableField('TAG', fieldDef.sortable);
    }
    buildSeparableAndSortableTag(fieldDef) {
        return this.buildSeparableAndSortableField('TAG', fieldDef.separator, fieldDef.sortable);
    }
    buildSortableText(fieldDef) {
        return this.buildSortableField('TEXT', fieldDef.sortable);
    }
    buildGeo() {
        return this.buildField('GEO');
    }
    buildField(type) {
        return [type];
    }
    buildSeparableField(type, separator) {
        return [type, 'SEPARATOR', separator ?? '|'];
    }
    buildSortableField(type, sortable) {
        return sortable ? [type, 'SORTABLE'] : [type];
    }
    buildSeparableAndSortableField(type, separator, sortable) {
        const result = [type, 'SEPARATOR', separator ?? '|'];
        if (sortable)
            result.push('SORTABLE');
        return result;
    }
}
exports.default = SchemaBuilder;
